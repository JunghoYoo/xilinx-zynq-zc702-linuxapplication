// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\controllerPeripheralHdlAdi\Count_Up_Down.v
// Created: 2014-09-08 14:12:09
// 
// Generated by MATLAB 8.2 and HDL Coder 3.3
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Count_Up_Down
// Source Path: controllerPeripheralHdlAdi/Encoder_Peripheral_Hardware_Specification/Debounce_A/Count_Up_Down
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Count_Up_Down
          (
           CLK_IN,
           reset,
           enb,
           u,
           count_debounce,
           y
          );


  input   CLK_IN;
  input   reset;
  input   enb;
  input   u;
  input   [7:0] count_debounce;  // uint8
  output  y;


  reg  u_n1;
  reg [7:0] count;  // uint8
  reg  y_reg;
  reg  u_n1_next;
  reg [7:0] count_next;  // uint8
  reg  y_reg_next;
  reg [8:0] add_temp_1;  // ufix9


  always @(posedge CLK_IN)
    begin : libDebounce_c2_Count_Up_Down_process
      if (reset == 1'b1) begin
        u_n1 <= 1'b0;
        count <= 8'd0;
        y_reg <= 1'b0;
      end
      else if (enb) begin
        u_n1 <= u_n1_next;
        count <= count_next;
        y_reg <= y_reg_next;
      end
    end

  always @(u, u_n1, count, count_debounce, y_reg) begin
    count_next = count;
    y_reg_next = y_reg;
    //Gateway: Debounce/Count_Up_Down
    //During: Debounce/Count_Up_Down
    //Entry Internal: Debounce/Count_Up_Down
    //Transition: '<S10>:27'
    if (u == u_n1) begin
      //Transition: '<S10>:4'
      //Transition: '<S10>:6'
      if (count >= count_debounce) begin
        //Transition: '<S10>:8'
        //Transition: '<S10>:10'
        y_reg_next = u;
        //Transition: '<S10>:16'
      end
      else begin
        //Transition: '<S10>:12'
        add_temp_1 = count + 1;
        if (add_temp_1[8] != 1'b0) begin
          count_next = 8'b11111111;
        end
        else begin
          count_next = add_temp_1[7:0];
        end
      end
      //Transition: '<S10>:15'
    end
    else begin
      //Transition: '<S10>:14'
      count_next = 8'd0;
    end
    //Transition: '<S10>:18'
    u_n1_next = u;
  end

  assign y = y_reg_next;



endmodule  // Count_Up_Down

