// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\controllerPeripheralHdlAdi\controllerHdl\controllerHdl_Encoder_To_Rotor_Position.v
// Created: 2014-09-08 14:12:04
// 
// Generated by MATLAB 8.2 and HDL Coder 3.3
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: controllerHdl_Encoder_To_Rotor_Position
// Source Path: controllerHdl/Encoder_To_Position_And_Velocity/Encoder_To_Rotor_Position
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module controllerHdl_Encoder_To_Rotor_Position
          (
           counter,
           param_zero_offset,
           position
          );


  input   [15:0] counter;  // uint16
  input   signed [17:0] param_zero_offset;  // sfix18_En14
  output  signed [17:0] position;  // sfix18_En14


  wire [31:0] radians_per_counts_mul_temp;  // ufix32_En25
  wire signed [17:0] encoder_angle;  // sfix18_En14
  wire signed [18:0] Add_sub_cast;  // sfix19_En14
  wire signed [18:0] Add_sub_cast_1;  // sfix19_En14
  wire signed [18:0] Add_out1;  // sfix19_En14
  wire signed [17:0] rotor_position;  // sfix18_En14

  // Encoder to Rotor Position
  // 
  // The encoder counts increase with positive rotation of the rotor.


  // <S7>/radians_per_counts
  assign radians_per_counts_mul_temp = 42166 * counter;
  assign encoder_angle = $signed(radians_per_counts_mul_temp[28:11]);



  // <S7>/Add
  assign Add_sub_cast = encoder_angle;
  assign Add_sub_cast_1 = param_zero_offset;
  assign Add_out1 = Add_sub_cast - Add_sub_cast_1;



  // <S7>/Wrap_2pi
  controllerHdl_Wrap_2pi   u_Wrap_2pi   (.x(Add_out1),  // sfix19_En14
                                         .wrap(rotor_position)  // sfix18_En14
                                         );

  assign position = rotor_position;

endmodule  // controllerHdl_Encoder_To_Rotor_Position

