// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\controllerPeripheralHdlAdi\velocityControlHdl\velocityControlHdl_Rotor_Velocity_Control.v
// Created: 2014-08-25 21:11:09
// 
// Generated by MATLAB 8.2 and HDL Coder 3.3
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: velocityControlHdl_Rotor_Velocity_Control
// Source Path: velocityControlHdl/Control_Velocity/Rotor_Velocity_Control
// Hierarchy Level: 5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module velocityControlHdl_Rotor_Velocity_Control
          (
           CLK_IN,
           reset,
           enb_1_2000_0,
           Reset_1,
           Err,
           param_velocity_p_gain,
           param_velocity_i_gain,
           Out
          );


  input   CLK_IN;
  input   reset;
  input   enb_1_2000_0;
  input   Reset_1;
  input   signed [17:0] Err;  // sfix18_En7
  input   signed [17:0] param_velocity_p_gain;  // sfix18_En16
  input   signed [17:0] param_velocity_i_gain;  // sfix18_En15
  output  signed [17:0] Out;  // sfix18_En15


  wire signed [35:0] P_term;  // sfix36_En23
  wire signed [35:0] Convert_Data_Type_out1;  // sfix36_En22
  wire signed [17:0] Constant2_out1;  // sfix18_En31
  wire signed [35:0] Product_out1;  // sfix36_En46
  wire signed [17:0] Maintain_Range_out1;  // sfix18_En28
  wire signed [35:0] Product1_out1;  // sfix36_En35
  wire signed [35:0] Constant_out1;  // sfix36_En35
  wire signed [35:0] Sum_out1;  // sfix36_En22
  wire PI_Sat_out2;
  wire Clamp_out1;
  wire switch_compare_1;
  wire signed [35:0] Switch_out1;  // sfix36_En35
  wire signed [31:0] I_term;  // sfix32_En28
  wire signed [39:0] Add_add_cast;  // sfix40_En35
  wire signed [39:0] Add_add_cast_1;  // sfix40_En35
  wire signed [39:0] Add_add_temp;  // sfix40_En35
  wire signed [31:0] Add_out1;  // sfix32_En28
  wire signed [42:0] Sum_add_cast;  // sfix43_En28
  wire signed [42:0] Sum_add_cast_1;  // sfix43_En28
  wire signed [42:0] Sum_add_temp;  // sfix43_En28
  wire signed [35:0] PI_Sat_out1;  // sfix36_En22
  wire signed [17:0] Data_Type_Conversion1_out1;  // sfix18_En15

  // Rotor Velocity Control


  // <S25>/Product2
  assign P_term = param_velocity_p_gain * Err;



  // <S25>/Convert_Data_Type
  velocityControlHdl_Convert_Data_Type   u_Convert_Data_Type   (.In1(P_term),  // sfix36_En23
                                                                .Out1(Convert_Data_Type_out1)  // sfix36_En22
                                                                );

  // <S25>/Constant2
  assign Constant2_out1 = 18'sb010100111110001011;



  // <S25>/Product
  assign Product_out1 = param_velocity_i_gain * Constant2_out1;



  // <S25>/Maintain_Range
  velocityControlHdl_Maintain_Range_block1   u_Maintain_Range   (.In1(Product_out1),  // sfix36_En46
                                                                 .Out1(Maintain_Range_out1)  // sfix18_En28
                                                                 );

  // <S25>/Product1
  assign Product1_out1 = Err * Maintain_Range_out1;



  // <S25>/Constant
  assign Constant_out1 = 36'sh000000000;



  // <S25>/Clamp
  velocityControlHdl_Clamp_block1   u_Clamp   (.preSat(Sum_out1),  // sfix36_En22
                                               .saturated(PI_Sat_out2),
                                               .preIntegrator(Product1_out1),  // sfix36_En35
                                               .Clamp(Clamp_out1)
                                               );

  assign switch_compare_1 = (Clamp_out1 > 1'b0 ? 1'b1 :
              1'b0);



  // <S25>/Switch
  assign Switch_out1 = (switch_compare_1 == 1'b0 ? Product1_out1 :
              Constant_out1);



  // <S25>/Add
  assign Add_add_cast = Switch_out1;
  assign Add_add_cast_1 = {I_term[31], {I_term, 7'b0000000}};
  assign Add_add_temp = Add_add_cast + Add_add_cast_1;
  assign Add_out1 = ((Add_add_temp[39] == 1'b0) && (Add_add_temp[38] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((Add_add_temp[39] == 1'b1) && (Add_add_temp[38] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(Add_add_temp[38:7])));



  // <S25>/Reset_Delay
  velocityControlHdl_Reset_Delay_block1   u_Reset_Delay   (.CLK_IN(CLK_IN),
                                                           .reset(reset),
                                                           .enb_1_2000_0(enb_1_2000_0),
                                                           .Reset_1(Reset_1),
                                                           .In(Add_out1),  // sfix32_En28
                                                           .Out(I_term)  // sfix32_En28
                                                           );

  // <S25>/Sum
  assign Sum_add_cast = {Convert_Data_Type_out1[35], {Convert_Data_Type_out1, 6'b000000}};
  assign Sum_add_cast_1 = I_term;
  assign Sum_add_temp = Sum_add_cast + Sum_add_cast_1;
  assign Sum_out1 = Sum_add_temp[41:6];



  // <S25>/PI_Sat
  velocityControlHdl_PI_Sat_block1   u_PI_Sat   (.In1(Sum_out1),  // sfix36_En22
                                                 .Out1(PI_Sat_out1),  // sfix36_En22
                                                 .saturated(PI_Sat_out2)
                                                 );

  // <S25>/Data Type Conversion1
  assign Data_Type_Conversion1_out1 = PI_Sat_out1[24:7];



  assign Out = Data_Type_Conversion1_out1;

endmodule  // velocityControlHdl_Rotor_Velocity_Control

