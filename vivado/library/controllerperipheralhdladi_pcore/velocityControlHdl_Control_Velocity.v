// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\controllerPeripheralHdlAdi\velocityControlHdl\velocityControlHdl_Control_Velocity.v
// Created: 2014-08-25 21:11:09
// 
// Generated by MATLAB 8.2 and HDL Coder 3.3
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: velocityControlHdl_Control_Velocity
// Source Path: velocityControlHdl/Control_Velocity
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module velocityControlHdl_Control_Velocity
          (
           CLK_IN,
           reset,
           enb_1_2000_0,
           Reset_1,
           velocity_command,
           velocity_measured,
           param_velocity_p_gain,
           param_velocity_i_gain,
           q_command
          );


  input   CLK_IN;
  input   reset;
  input   enb_1_2000_0;
  input   Reset_1;
  input   signed [17:0] velocity_command;  // sfix18_En8
  input   signed [17:0] velocity_measured;  // sfix18_En8
  input   signed [17:0] param_velocity_p_gain;  // sfix18_En16
  input   signed [17:0] param_velocity_i_gain;  // sfix18_En15
  output  signed [17:0] q_command;  // sfix18_En15


  wire signed [18:0] Error_Sum_sub_cast;  // sfix19_En8
  wire signed [18:0] Error_Sum_sub_cast_1;  // sfix19_En8
  wire signed [18:0] Error_Sum_sub_temp;  // sfix19_En8
  wire signed [17:0] velocity_error;  // sfix18_En7

  // Velocity Controller
  // 
  // The controller regulates motor velocity using rotor velocity feedback compared to a commanded velocity.
  // The output of the controller is the quadrature-winding current command which is directly proportional to the electromagnetic torque of the motor.
  // Since the motor being controlled is a Permanent Magnet Synchronous Machine, the rotor flux linkage is fixed (determined by the magnets),
  // hence the commanded direct-winding current is always zero.


  // <S2>/Error Sum
  assign Error_Sum_sub_cast = velocity_command;
  assign Error_Sum_sub_cast_1 = velocity_measured;
  assign Error_Sum_sub_temp = Error_Sum_sub_cast - Error_Sum_sub_cast_1;
  assign velocity_error = Error_Sum_sub_temp[18:1];



  // <S2>/Rotor_Velocity_Control
  velocityControlHdl_Rotor_Velocity_Control   u_Rotor_Velocity_Control   (.CLK_IN(CLK_IN),
                                                                          .reset(reset),
                                                                          .enb_1_2000_0(enb_1_2000_0),
                                                                          .Reset_1(Reset_1),
                                                                          .Err(velocity_error),  // sfix18_En7
                                                                          .param_velocity_p_gain(param_velocity_p_gain),  // sfix18_En16
                                                                          .param_velocity_i_gain(param_velocity_i_gain),  // sfix18_En15
                                                                          .Out(q_command)  // sfix18_En15
                                                                          );

endmodule  // velocityControlHdl_Control_Velocity

