// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\controllerPeripheralHdlAdi\controllerHdl\controllerHdl_Field_Oriented_Control.v
// Created: 2014-09-08 14:12:04
// 
// Generated by MATLAB 8.2 and HDL Coder 3.3
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: controllerHdl_Field_Oriented_Control
// Source Path: controllerHdl/Field_Oriented_Control
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module controllerHdl_Field_Oriented_Control
          (
           CLK_IN,
           reset,
           enb_1_2000_0,
           controller_mode,
           command,
           electrical_postion,
           rotor_velocity,
           phase_currents_0,
           phase_currents_1,
           param_velocity_p_gain,
           param_velocity_i_gain,
           param_current_p_gain,
           param_current_i_gain,
           param_open_loop_bias,
           param_open_loop_scalar,
           phase_voltages_0,
           phase_voltages_1,
           phase_voltages_2,
           dq_current_0,
           dq_current_1,
           electrical_position_ol
          );


  input   CLK_IN;
  input   reset;
  input   enb_1_2000_0;
  input   [1:0] controller_mode;  // ufix2
  input   signed [17:0] command;  // sfix18_En8
  input   signed [17:0] electrical_postion;  // sfix18_En14
  input   signed [17:0] rotor_velocity;  // sfix18_En8
  input   signed [17:0] phase_currents_0;  // sfix18_En15
  input   signed [17:0] phase_currents_1;  // sfix18_En15
  input   signed [17:0] param_velocity_p_gain;  // sfix18_En16
  input   signed [17:0] param_velocity_i_gain;  // sfix18_En15
  input   signed [17:0] param_current_p_gain;  // sfix18_En10
  input   signed [17:0] param_current_i_gain;  // sfix18_En2
  input   signed [17:0] param_open_loop_bias;  // sfix18_En14
  input   signed [17:0] param_open_loop_scalar;  // sfix18_En16
  output  signed [19:0] phase_voltages_0;  // sfix20_En12
  output  signed [19:0] phase_voltages_1;  // sfix20_En12
  output  signed [19:0] phase_voltages_2;  // sfix20_En12
  output  signed [17:0] dq_current_0;  // sfix18_En15
  output  signed [17:0] dq_current_1;  // sfix18_En15
  output  signed [17:0] electrical_position_ol;  // sfix18_En14


  wire MATLAB_Function_out2;
  wire signed [19:0] Velocity_Control_out1_0;  // sfix20_En12
  wire signed [19:0] Velocity_Control_out1_1;  // sfix20_En12
  wire signed [19:0] Velocity_Control_out1_2;  // sfix20_En12
  wire signed [17:0] Velocity_Control_out2_0;  // sfix18_En15
  wire signed [17:0] Velocity_Control_out2_1;  // sfix18_En15
  wire [1:0] MATLAB_Function_out1;  // ufix2
  wire signed [17:0] Open_Loop_Control_out1_0;  // sfix18_En13
  wire signed [17:0] Open_Loop_Control_out1_1;  // sfix18_En13
  wire signed [17:0] Open_Loop_Control_out1_2;  // sfix18_En13
  wire signed [17:0] Open_Loop_Control_out2;  // sfix18_En14
  wire signed [17:0] Open_Loop_Control_out1 [0:2];  // sfix18_En13 [3]
  wire signed [19:0] Open_Loop_Control_out1_dtc [0:2];  // sfix20_En12 [3]
  wire signed [19:0] Velocity_Control_out1 [0:2];  // sfix20_En12 [3]
  wire signed [19:0] StandBy_out1_0;  // sfix20_En12
  wire signed [19:0] StandBy_out1_1;  // sfix20_En12
  wire signed [19:0] StandBy_out1_2;  // sfix20_En12
  wire signed [19:0] StandBy_out1 [0:2];  // sfix20_En12 [3]
  wire signed [19:0] Multiport_Switch_out1 [0:2];  // sfix20_En12 [3]

  // Field Oriented Control


  // <S3>/MATLAB Function
  controllerHdl_MATLAB_Function_block2   u_MATLAB_Function   (.CLK_IN(CLK_IN),
                                                              .reset(reset),
                                                              .enb_1_2000_0(enb_1_2000_0),
                                                              .cMode(controller_mode),  // ufix2
                                                              .index(MATLAB_Function_out1),  // ufix2
                                                              .reset_1(MATLAB_Function_out2)
                                                              );

  // <S3>/Open_Loop_Control
  controllerHdl_Open_Loop_Control   u_Open_Loop_Control   (.CLK_IN(CLK_IN),
                                                           .reset(reset),
                                                           .enb_1_2000_0(enb_1_2000_0),
                                                           .reset_1(MATLAB_Function_out2),
                                                           .command_value(command),  // sfix18_En8
                                                           .param_open_loop_bias(param_open_loop_bias),  // sfix18_En14
                                                           .param_open_loop_scalar(param_open_loop_scalar),  // sfix18_En16
                                                           .phase_voltages_0(Open_Loop_Control_out1_0),  // sfix18_En13
                                                           .phase_voltages_1(Open_Loop_Control_out1_1),  // sfix18_En13
                                                           .phase_voltages_2(Open_Loop_Control_out1_2),  // sfix18_En13
                                                           .electrical_position(Open_Loop_Control_out2)  // sfix18_En14
                                                           );

  assign Open_Loop_Control_out1[0] = Open_Loop_Control_out1_0;
  assign Open_Loop_Control_out1[1] = Open_Loop_Control_out1_1;
  assign Open_Loop_Control_out1[2] = Open_Loop_Control_out1_2;

  assign Open_Loop_Control_out1_dtc[0] = {{3{Open_Loop_Control_out1[0][17]}}, Open_Loop_Control_out1[0][17:1]};
  assign Open_Loop_Control_out1_dtc[1] = {{3{Open_Loop_Control_out1[1][17]}}, Open_Loop_Control_out1[1][17:1]};
  assign Open_Loop_Control_out1_dtc[2] = {{3{Open_Loop_Control_out1[2][17]}}, Open_Loop_Control_out1[2][17:1]};



  // <S3>/Velocity_Control
  velocityControlHdl_velocityControlHdl   u_Velocity_Control   (.CLK_IN(CLK_IN),
                                                                .reset(reset),
                                                                .enb_1_2000_0(enb_1_2000_0),
                                                                .reset_1(MATLAB_Function_out2),
                                                                .command(command),  // sfix18_En8
                                                                .measured(rotor_velocity),  // sfix18_En8
                                                                .phase_currents_0(phase_currents_0),  // sfix18_En15
                                                                .phase_currents_1(phase_currents_1),  // sfix18_En15
                                                                .electrical_position(electrical_postion),  // sfix18_En14
                                                                .param_velocity_p_gain(param_velocity_p_gain),  // sfix18_En16
                                                                .param_velocity_i_gain(param_velocity_i_gain),  // sfix18_En15
                                                                .param_current_p_gain(param_current_p_gain),  // sfix18_En10
                                                                .param_current_i_gain(param_current_i_gain),  // sfix18_En2
                                                                .phase_voltages_0(Velocity_Control_out1_0),  // sfix20_En12
                                                                .phase_voltages_1(Velocity_Control_out1_1),  // sfix20_En12
                                                                .phase_voltages_2(Velocity_Control_out1_2),  // sfix20_En12
                                                                .dq_currents_0(Velocity_Control_out2_0),  // sfix18_En15
                                                                .dq_currents_1(Velocity_Control_out2_1)  // sfix18_En15
                                                                );

  assign Velocity_Control_out1[0] = Velocity_Control_out1_0;
  assign Velocity_Control_out1[1] = Velocity_Control_out1_1;
  assign Velocity_Control_out1[2] = Velocity_Control_out1_2;

  // Stand By mode for controller outputs constant phase voltages.
  // 
  // <S3>/StandBy
  controllerHdl_StandBy   u_StandBy   (.Phase_Voltages_0(StandBy_out1_0),  // sfix20_En12
                                       .Phase_Voltages_1(StandBy_out1_1),  // sfix20_En12
                                       .Phase_Voltages_2(StandBy_out1_2)  // sfix20_En12
                                       );

  assign StandBy_out1[0] = StandBy_out1_0;
  assign StandBy_out1[1] = StandBy_out1_1;
  assign StandBy_out1[2] = StandBy_out1_2;

  // <S3>/Multiport Switch
  assign Multiport_Switch_out1[0] = (MATLAB_Function_out1 == 2'b00 ? Open_Loop_Control_out1_dtc[0] :
              (MATLAB_Function_out1 == 2'b01 ? Velocity_Control_out1[0] :
              StandBy_out1[0]));
  assign Multiport_Switch_out1[1] = (MATLAB_Function_out1 == 2'b00 ? Open_Loop_Control_out1_dtc[1] :
              (MATLAB_Function_out1 == 2'b01 ? Velocity_Control_out1[1] :
              StandBy_out1[1]));
  assign Multiport_Switch_out1[2] = (MATLAB_Function_out1 == 2'b00 ? Open_Loop_Control_out1_dtc[2] :
              (MATLAB_Function_out1 == 2'b01 ? Velocity_Control_out1[2] :
              StandBy_out1[2]));



  assign phase_voltages_0 = Multiport_Switch_out1[0];

  assign phase_voltages_1 = Multiport_Switch_out1[1];

  assign phase_voltages_2 = Multiport_Switch_out1[2];

  assign dq_current_0 = Velocity_Control_out2_0;

  assign dq_current_1 = Velocity_Control_out2_1;

  assign electrical_position_ol = Open_Loop_Control_out2;

endmodule  // controllerHdl_Field_Oriented_Control

